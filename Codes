# find days from givin dates

from datetime import datetime

start_date = '2022-12-12'
end_date = '2022-12-11'

days = datetime.strptime(end_date,'%Y-%m-%d').day - datetime.strptime(start_date,'%Y-%m-%d').day

if days > 0:
	print('days - ',days)
else:
	print('enter date correctly')
  
----------------------------------------------

# wrapper function for time

import time
def timeis(func):
    def wrap(*args, **kwargs):
        start = time.time()
        result = func(*args, **kwargs)
        end = time.time()

        print(func.__name__, end - start)
        return result
    return wrap
@timeis
def countdown(n):
    while n > 0:
        n -= 1
countdown(5)

-----------------------------------------------

# CountDown Function
import time

def timeis(t):
    while t:
        mins, sec = divmod(t, 60)
        timer = '{:02d}:{:02d}'.format(mins, sec)
        print(timer, end="\n")
        time.sleep(1)
        t -= 1
    print("Here it comes !")

timeis(5)


--------------------------------------------------
# Code to generate QR code 
import qrcode
data = "https://www.example.com"

qr = qrcode.QRCode(
    version=1,  # Controls the size of the QR Code (1 is 21x21, higher numbers are larger)
    error_correction=qrcode.constants.ERROR_CORRECT_L,  # Error correction level
    box_size=10,  # Size of each box in the QR code
    border=4,  # Thickness of the border (minimum is 4)
)

qr.add_data(data)
qr.make(fit=True)
img = qr.make_image(fill_color="black", back_color="white")
img.save("qrcode.png")
img.show()

